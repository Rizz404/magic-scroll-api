generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "fullTextSearch"] // ! experimental
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// * Inget string defaultnya adalah db.text

model User {
  id         String    @id @default(cuid()) @db.VarChar(30)
  username   String    @unique @db.VarChar(255)
  email      String    @unique @db.VarChar(320)
  password   String?   @db.VarChar(255)
  role       Roles     @default(USER)
  isOauth    Boolean
  lastLogin  DateTime?
  isVerified Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  profile         Profile?
  notes           Note[]
  notePermission  NotePermission[]
  noteInteraction NoteInteraction[]
  followers       Follow[]          @relation("FollowerRelation")
  followings      Follow[]          @relation("FollowingRelation")

  @@index([username])
}

model Profile {
  id           String   @id @default(cuid()) @db.VarChar(30)
  userId       String   @unique @db.VarChar(30)
  firstName    String   @default("") @db.VarChar(255)
  lastName     String   @default("") @db.VarChar(255)
  profileImage String   @default("") @db.VarChar(1024)
  age          Int?     @db.SmallInt // * More small but fit for age field (they said)
  phone        String   @default("") @db.VarChar(15)
  // socialMedias String[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Follow {
  followerId  String @unique @db.VarChar(30)
  followingId String @unique @db.VarChar(30)

  follower  User @relation("FollowerRelation", fields: [followerId], references: [id])
  following User @relation("FollowingRelation", fields: [followingId], references: [id])

  @@id([followerId, followingId])
  @@index([followerId, followingId])
}

model Note {
  id             String   @id @default(cuid()) @db.VarChar(30)
  userId         String   @db.VarChar(30)
  studyId        String   @db.VarChar(30)
  title          String   @db.VarChar(255)
  content        String
  thumbnailImage String   @db.VarChar(1024)
  attachments    String[]
  isPrivate      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user                   User                    @relation(fields: [userId], references: [id])
  study                  Study                   @relation(fields: [studyId], references: [id])
  tags                   Tag[]
  notePermission         NotePermission[]
  noteInteraction        NoteInteraction[]
  noteInteractionCounter NoteInteractionCounter?

  @@index([userId, studyId, title])
}

model NoteInteraction {
  userId      String  @db.VarChar(30)
  noteId      String  @db.VarChar(30)
  isUpvoted   Boolean @default(false)
  isDownvoted Boolean @default(false)
  isFavorited Boolean @default(false)
  isSaved     Boolean @default(false)

  user User @relation(fields: [userId], references: [id])
  note Note @relation(fields: [noteId], references: [id])

  @@id([userId, noteId])
  @@index([userId, noteId])
}

model NoteInteractionCounter {
  noteId         String @unique @db.VarChar(30)
  upvotedCount   Int    @default(0)
  downvotedCount Int    @default(0)
  favoritedCount Int    @default(0)
  savedCount     Int    @default(0)

  note Note @relation(fields: [noteId], references: [id])

  @@id([noteId])
  @@index([noteId])
}

model NotePermission {
  id         String     @id @default(cuid()) @db.VarChar(30)
  noteId     String     @unique @db.VarChar(30)
  userId     String     @db.VarChar(30)
  permission Permission @default(READ)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  note Note @relation(fields: [noteId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([noteId])
}

model Study {
  id          String   @id @default(cuid()) @db.VarChar(30)
  name        String   @unique @db.VarChar(255)
  description String
  image       String   @default("https://i.pinimg.com/236x/a2/6a/27/a26a27a5ff6a2cb80d5b872a73d1413b.jpg")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  notes Note[]
  tag   Tag[]

  @@index([name])
}

model Tag {
  id          String   @id @default(cuid()) @db.VarChar(30)
  name        String   @unique @db.VarChar(255)
  studyId     String   @db.VarChar(30)
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  study Study  @relation(fields: [studyId], references: [id])
  notes Note[]

  @@index([name])
}

enum Roles {
  USER
  ADMIN
}

enum Permission {
  READ
  READ_WRITE
}
